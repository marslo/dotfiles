#!/bin/bash
#shellcheck disable=SC2034,SC2154,SC2155

# Color configure in ls
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
# export LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:'
eval "$(/usr/local/opt/coreutils/libexec/gnubin/dircolors ${iRCHOME}/.colors)"
export EDITOR=vim
export KEYTIMEOUT=1
export QUOTING_STYLE=literal
export TERM=xterm-256color

# The color of man page
export LESS_TERMCAP_mb=$(printf "\\e[1;31m")         # begin blinding
export LESS_TERMCAP_md=$(printf "\\e[1;31m")         # begin bold
export LESS_TERMCAP_me=$(printf "\\e[0m")            # end mode
export LESS_TERMCAP_se=$(printf "\\e[0m")            # end stadout-mode
export LESS_TERMCAP_so=$(printf "\\e[1;44;33m")      # begin stadout-mode - info box
export LESS_TERMCAP_ue=$(printf "\\e[0m")            # end underline
export LESS_TERMCAP_us=$(printf "\\e[1;32m")         # begin underline
export LESS='-eirMXR'
# export LESS="-eirMX"
export SYSTEMD_LESS=FRXMK

# [using vim as man-page](https://vim.fandom.com/wiki/Using_vim_as_a_man-page_viewer_under_Unix)
export PAGER="/bin/sh -c \"unset PAGER;col -b -x | \
    vim -R -c 'set ft=man nomod nolist' -c 'map q :q<CR>' \
    -c 'map <SPACE> <C-D>' -c 'map b <C-U>' \
    -c 'nmap K :Man <C-R>=expand(\\\"<cword>\\\")<CR><CR>' -\""

# The setting about history
export HISTTIMEFORMAT='%F %T '
export HISTFILESIZE=10000
export HISTSIZE=10000
export HISTCONTROL=ignoreboth:erasedups

# for bash-complication@2 & gradle-complication
export GRADLE_COMPLETION_EXCLUDE_PATTERN='/(integTest|samples|smokeTest|testFixtures|templates|out|features)/'

export LANG=en_US.UTF-8
export LANGUAGE=$LANG
export LC_COLLATE=$LANG
export LC_CTYPE=$LANG
export LC_MESSAGES=$LANG
export LC_MONETARY=$LANG
export LC_NUMERIC=$LANG
export LC_TIME=$LANG
export LC_ALL=$LANG

BINUTILS='/usr/local/opt/binutils'
GNUBINHOME='/usr/local/opt/coreutils/libexec/gnubin'
GNUMANHOME='/usr/local/opt/coreutils/libexec/gnuman'
GNUWHICH='/usr/local/opt/gnu-which/libexec/gnubin'
GNUGREP='/usr/local/opt/grep/libexec/gnubin'
GNUGETOPT='/usr/local/opt/gnu-getopt/bin'
GNUTAR='/usr/local/opt/gnu-tar/libexec/gnubin'
GNUFIND='/usr/local/opt/findutils/libexec/gnubin'
GNUINDENT='/usr/local/opt/gnu-indent/libexec/gnubin'
GNUSED='/usr/local/opt/gnu-sed/libexec/gnubin'
GNUPATH="${GNUBINHOME}:${GNUBINH}${GNUWHICH}:${GNUGETOPT}:${GNUGREP}:${GNUTAR}:${GNUFIND}:${GNUINDENT}:${GNUSED}"

GRADLE_HOME='/opt/gradle/gradle-4.8'
M2_HOME='/opt/maven/apache-maven-3.5.0'
M2=$M2_HOME/bin
MAVEN_OPTS='-Xms512m -Xmx1G'
ANDROID_HOME='/opt/android'
ANDROID_NDK_HOME="$ANDROID_HOME/android-ndk"

JAVA_HOME='/Library/Java/JavaVirtualMachines/jdk1.8.0_271.jdk/Contents/Home'      # JAVA_HOME=$(/usr/libexec/java_home)
GROOVY_HOME='/usr/local/opt/groovy/libexec'
CLASSPATH=".:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$GROOVY_HOME/lib"

OPENSSL_HOME='/usr/local/opt/openssl@1.1'                                         # OPENSSL="$(brew --prefix openssl)"
NODE_HOME='/usr/local/opt/node@12'
HOMEBREW_SBIN='/usr/local/sbin'
MYSQL_HOME='/usr/local/mysql'
MACVIM='/Applications/MacVim.app/Contents/bin'
INETUTILS='/usr/local/opt/inetutils/libexec/gnubin'
ITERM2_ADDITIONAL="${HOME}/.iterm2"

PYENV_ROOT='/opt/pyenv'
PYTHON_HOME='/usr/local/opt/python@3.9'
TCLTK_HOME='/usr/local/opt/tcl-tk'                                                # TCLTK_HOME="$(brew --prefix tcl-tk)"
PYTHONPATH="/usr/local/lib/python3.9/site-packages:$PYTHONPATH"
PYTHONUSERBASE="$(/usr/local/opt/python/libexec/bin/python -c 'import site; print(site.USER_BASE)')"
# PYTHONUSERBASE=$PYTHONPATH
PYTHON_CONFIGURE_OPTS="--with-tcltk-includes='-I${TCLTK_HOME}/include' --with-tcltk-libs='-L${TCLTK_HOME}/lib -ltcl8.6 -ltk8.6'"

SQLITE='/usr/local/opt/sqlite'
RUBYGLOBAL="/usr/local/opt/ruby/bin"                                              # RUBYLOCAL="$HOME/.rbenv/shims"
RUBYGEM="/Users/marslo/.gem/ruby/2.6.0/bin"
RUBY_CONFIGURE_OPTS="--with-openssl-dir=${OPENSSL_HOME}"

MARSLOBIN="${iRCHOME}/bin"
SCRIPTBIN="${TCLTK_HOME}/bin:${PYTHON_HOME}/libexec/bin:${PYTHONUSERBASE}/bin:${NODE_HOME}/bin:${JAVA_HOME}/bin:${GROOVY_HOME}/bin:${PYENV_ROOT}/bin"
          # "${RUBYGLOBAL}:${RUBYGEM}"
UTLSPATH="${BINUTILS}/bin:${OPENSSL_HOME}/bin:${INETUTILS}:/usr/local/opt/file-formula/bin:/usr/local/opt/gettext/bin"
LDFLAGS="-L${TCLTK_HOME}/lib -L${BINUTILS}/lib -L${PYTHON_HOME}/lib -L${SQLITE}/lib -L$(brew --prefix)/lib -L/usr/local/opt/readline/lib -L${OPENSSL_HOME}/lib -L${NODE_HOME}/lib"
CPPFLAGS="-I${TCLTK_HOME}/include -I${BINUTILS}/include -I${SQLITE}/include -I$(brew --prefix)/include -I/usr/local/opt/readline/include -I${OPENSSL_HOME}/include -I${NODE_HOME}/include"
CFLAGS="-I${TCLTK_HOME}/include"
PKG_CONFIG_PATH="${TCLTK_HOME}/lib/pkgconfig:/usr/local/Homebrew/Library/Homebrew/os/mac/pkgconfig/11.1:${SQLITE}/lib/pkgconfig:${OPENSSL_HOME}/lib/pkgconfig:${PYTHON_HOME}/lib/pkgconfig:/usr/local/opt/ruby/lib/pkgconfig:${PKG_CONFIG_PATH}"


PATH="${SQLITE}/bin:${MACVIM}:${MARSLOBIN}:${SCRIPTBIN}:${GNUPATH}:${HOMEBREW_SBIN}:${UTLSPATH}:${ITERM2_ADDITIONAL}:$PATH"
MANPATH=$GNUMANHOME:$MANPATH
export JAVA_HOME GROOVY_HOME PYENV_ROOT PATH MANPATH
export PYTHONPATH PYTHONUSERBASE CLASSPATH LDFLAGS CPPFLAGS RUBY_CONFIGURE_OPTS PKG_CONFIG_PATH

# export M2_HOME M2 MAVEN_OPTS
# PATH=$MYSQL_HOME/bin:$HOMEBREW_SBIN:$GNUBINHOME:$M2:$GRADLE_HOME/bin:"/Applications/Visual Studio Code.app/Contents/Resources/app/bin":/usr/local/opt/file-formula/bin:/usr/local/opt/gettext/bin:$TCLTK_HOME/bin:$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$GROOVY_HOME
# export MYSQL_HOME JAVA_HOME CLASSPATH GROOVY_HOME GRADLE_HOME M2_HOME M2 MAVEN_OPTS ANDROID_HOME ANDROID_NDK_HOME PATH MANPATH PYTHONPATH

export GOOGLE_API_KEY='AIzaSyDx7mxx6M_mZdbk7Ooi38J4WIy4t_tzsVM'
export GOOGLE_DEFAULT_CLIENT_ID='1062422070847-9vauullbajlrd0s7f1hul9329bu8dnm6.apps.googleusercontent.com'
export GOOGLE_DEFAULT_CLIENT_SECRET='zarYXvltPi3PC9Ic5r0JAQqm'
# export HOMEBREW_GITHUB_API_TOKEN="80cf3215764805c0d385ecb7ac7c6c87df799424"
export HOMEBREW_INSTALL_BADGE='☕️ 🐸'

export ARMLMD_LICENSE_FILE=8224@llic-02
export RMK_HOST='cd-ssdfw2:2376'
export SRVPW='9bvV8A2c#dcT'

# ┌─ (USERNAME@HOSTNAME PATH) - [keymap] - (git-branch) ->
# └─ $

#  ----+---+---+----+---+----       --------+--------
# | ⌌・| ⠋ | ⌜ | ╭╶ | ┌ | ┌─ |    | 0\;xxm | Normal |
# | ⌎・| ⠦ | ⌞ | ╰╶ | └ | └─ |    | 1\;xxm | Bright |
#  ----+---+---+----+---+----      --------+--------
#  --------------+-------------
# | Black        | \e[0;30m    |   ----------------+---------------------------------
# | Blue         | \e[0;34m    |  | \[\e[xx;0m]\]  | system color                    |
# | Green        | \e[0;32m    |  | \[\e[xx\;0m]\] | system color in ``              |
# | Cyan         | \e[0;36m    |  | \[\e[0;xxm]\]  | profile color (solarized)       |
# | Red          | \e[0;31m    |  | \[\e[0\;xxm]\] | profile color (solarized) in `` |
# | Purple       | \e[0;35m    |   ----------------+---------------------------------
# | Brown        | \e[0;33m    |
# | Gray         | \e[0;37m    |
# | Dark Gray    | \e[1;30m    |
# | Light Blue   | \e[1;34m    |
# | Light Green  | \e[1;32m    |
# | Light Cyan   | \e[1;36m    |
# | Light Red    | \e[1;31m    |
# | Light Purple | \e[1;35m    |
# | Yellow       | \e[1;33m    |
# | White        | \e[1;37m    |
#  --------------+-------------

UMARK='\[\033(0\]l\[\033(B\]'
DMARK='\[\033(0\]m\[\033(B\]'
LMARK='\[\033(0\]q\[\033(B\]'

# if [ -z "$DISPLAY" ]; then
#   export PS1="\n${DBLACK}┌─ (\u@\h ${COLRESET} ${DRED}\w${COLRESET}${DBLACK}) ->${COLRESET}\n${DBLACK}└─ ${COLRESET}\`if [ \$? = 0 ]; then echo ${SDBLACK}\\$ ${COLRESET}; else echo ${SDRED}\\$ ${COLRESET}; fi\`${COLNONE}"
#   export PS2="${DBLACK} -> ${COLRESET}${COLNONE}"
# else
#   export PS1="\n${DBLACK}${UMARK}${LMARK} (\u@\h ${COLRESET} ${DRED}\w${COLRESET}${DBLACK}) ->${COLRESET}\n${DBLACK}${DMARK}${LMARK} ${COLRESET}\`if [ \$? = 0 ]; then echo ${SDBLACK}\\$ ${COLRESET}; else echo ${SDRED}\\$ ${COLRESET}; fi\`${COLNONE}"
#   export PS2="${DBLACK} ->${LMARK} ${COLRESET}${COLNONE}"
# fi

SLGREEN='\[\033[32;0m\]'
SDGREEN='\[\033[32;2m\]'
# SDGREEN='\[\033[2;32m\]'
SDYELLOW='\[\033[2;33m\]'
SLYELLOW='\[\033[0;33m\]'
BYELLOW='\[\033[2;33m\]'
ifSDYELLOW='\[\033[2\;33m\]'

DBLACK='\[\033[30;1m\]'
LBLACK='\[\033[30;0m\]'
SDBLACK='\[\033[1;30m\]'
SLBLACK='\[\033[0;30m\]'
SDRED='\[\033[1;31m\]'
SLRED='\[\033[0;31m\]'
SDBLUE='\[\033[1;34m\]'
SLBLUE='\[\033[0;34m\]'
LRED='\[\033[31;0m\]'
DRED='\[\033[31;1m\]'

ifDBLACK='\[\033[30\;1m\]'
ifLBLACK='\[\033[30\;0m\]'
ifSDBLACK='\[\033[1\;30m\]'
ifSLBLACK='\[\033[0\;30m\]'
ifDRED='\[\033[31\;1m\]'
ifSDRED='\[\033[1\;31m\]'
ifSLRED='\[\033[0\;31m\]'
ifSLGREEN='\[\033[0\;32m\]'
ifSDGREEN='\[\033[1\;32m\]'
ifSLBLUE='\[\033[0\;34m\]'
ifSDBLUE='\[\033[1\;34m\]'

# 38;5; for the foreground and 48;5; for the background
# https://unix.stackexchange.com/a/124409/29178
function RGBcolor {
  echo "16 + $1 * 36 + $2 * 6 + $3" | bc
}

function rightPrompt() {
  if [ "$(bind -v | awk '/keymap/ {print $NF}')" == 'emacs' ]; then
    kmap=⌁
  else
    kmap=⚙︎
  fi
  printf "%*s" $COLUMNS "${kmap}"
  # add this to PS1: \[$(tput sc; rightPrompt; tput rc)\]
}

function showKeyMap() {
  RET=$?
  bind -v | awk '/keymap/ {print $NF}'
  return "${RET}"
}

fgc=$(RGBcolor 5 6 5)
COLDEFAULT="\[$(tput setaf 237)\]"
COLIFDEFAULT="\[\033[1\;38\;5\;${fgc}m\]"
COLRESET="\[$(tput sgr0)\]"
COLNONE='\[\033[0m\]'

# COLRESET='\[\033[1m\]'
# COLDEFAULT="\[\033[1;38;5;${fgc}m\]"  | "${SDGREEN}"
# COLIFDEFAULT="${ifSDGREEN}"

# For Mac os -> Solarized Dark
# export PS1="\n${COLDEFAULT}┌─ (\u@\h${COLRESET} ${SDRED}\w${COLRESET}${COLDEFAULT}) ->${COLRESET}\n${COLDEFAULT}└─ ${COLRESET}\`if [ \$? = 0 ]; then echo ${COLIFDEFAULT}\\$ ${COLRESET}; else echo ${ifSLRED}\\$ ${COLRESET}; fi\`${COLNONE}"

PS1="\\n${COLRESET}${COLDEFAULT}╭╶ (\\u@\\h${COLRESET} "
PS1+="${SLRED}\\w${COLRESET}${COLDEFAULT}) "
PS1+="- [\$(showKeyMap)] "
PS1+="\$(__git_ps1 \"- (${SDGREEN}%s${COLNONE}${COLDEFAULT}) \")${COLRESET}"
PS1+="${COLDEFAULT}->${COLRESET}"
PS1+="\\n${COLDEFAULT}╰╶ ${COLRESET}"
PS1+="\`if [ \$? = 0 ]; then echo ${COLIFDEFAULT}\\$; else echo ${ifSLRED}\\$; fi\` ${COLRESET}"
PS1+="${COLNONE}"
export PS1
export PS2="${COLDEFAULT}  -> ${COLRESET}${COLNONE}"
