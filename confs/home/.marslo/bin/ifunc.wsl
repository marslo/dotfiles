#!/usr/bin/env bash

# inspired from http://www.earthinfo.org/linux-disk-usage-sorted-by-size-and-human-readable/
function udfs {
  du -sk "$@" | sort -nr | while read size fname;
  do
    for unit in k M G T P E Z Y;
    do
      if [ $size -lt 1024 ];
      then
        echo -e "${size}${unit}\t${fname}";
        break;
      fi;
      size=$((size/1024));
    done;
  done
}


# /**************************************************************
#  __      __
#  / _|    / _|
# | |_ ___| |_
# |  _|_  /  _|
# | |  / /| |
# |_| /___|_|
#
# **************************************************************/

# smart copy
function copy() {
  if [[ 0 -eq $# ]]; then
    # shellcheck disable=SC2046
    /mnt/c/Windows/System32/clip.exe < $(fzf)
  else
    /mnt/c/Windows/System32/clip.exe < "$1"
  fi
}
# magic vim
function vim() {
  if [[ 0 -eq $# ]]; then
    fzf --multi --bind="enter:become($(which -a vim | head -1) {+})"
  elif [[ 1 -eq $# ]] && [[ -d $1 ]]; then
    local target=$1
    pushd . >/dev/null
    cd "${target}" || return
    fzf --multi --bind="enter:become($(which -a vim | head -1) {+})"
    popd >/dev/null || true
  else
    # shellcheck disable=SC2068
    $(which -a vim | head -1) -u $HOME/.vimrc "$*"
  fi
}

## preview contents via `$ cd **<tab>`: https://pragmaticpineapple.com/four-useful-fzf-tricks-for-your-terminal/
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd) fzf "$@" --preview 'tree -C {} | head -200' ;;
    *)  fzf "$@" ;;
  esac
}

# fe [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
# https://github.com/junegunn/fzf/wiki/examples#opening-files
fe() {
  # shellcheck disable=SC2207
  IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
  # shellcheck disable=SC2128
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

# fda - including hidden directories
fda() {
  local dir
  # shellcheck disable=SC2164
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$dir"
}

# cdp - cd to selected parent directory
cdp() {
  # shellcheck disable=SC2034,SC2316
  local declare dirs=()
  get_parent_dirs() {
    if [[ -d "${1}" ]]; then dirs+=("$1"); else return; fi
    if [[ "${1}" == '/' ]]; then
      for _dir in "${dirs[@]}"; do echo $_dir; done
    else
      # shellcheck disable=SC2046
      get_parent_dirs $(dirname "$1")
    fi
  }
  # shellcheck disable=SC2155,SC2046
  local DIR=$(get_parent_dirs $(realpath "${1:-$PWD}") | fzf-tmux --tac)
  cd "$DIR" || return
}

# cdf - cd into the directory of the selected file
cdf() {
  local file
  local dir
  # shellcheck disable=SC2164
  file=$(fzf +m -q "$1") && dir=$(dirname "$file") && cd "$dir"
}

# find-in-file - usage: fif <searchTerm>   # using ripgrep combined with preview
fif() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
  rg --files-with-matches --no-messages "$1" \
    | fzf --preview "highlight -O ansi -l {} 2> /dev/null \
    | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' \
   || rg --no-line-number --ignore-case --pretty --context 10 '$1' {}"
}

# list process
lsps() {
  (date; ps -ef) |
  fzf --bind='ctrl-r:reload(date; ps -ef)' \
      --header=$'Press CTRL-R to reload\n\n' --header-lines=2 \
      --preview='echo {}' --preview-window=down,3,wrap \
      --layout=reverse --height=80% |
  awk '{print $2}'
}

# kill process
kps() {
  (date; ps -ef) |
  fzf --bind='ctrl-r:reload(date; ps -ef)' \
      --header=$'Press CTRL-R to reload\n\n' --header-lines=2 \
      --preview='echo {}' --preview-window=down,3,wrap \
      --layout=reverse --height=80% |
  awk '{print $2}' |
  xargs kill -9
}

# bat
help() { "$@" --help 2>&1 | bat --plain --language=help ; }

# v - open files in ~/.vim_mru_files       # https://github.com/junegunn/fzf/wiki/Examples#v
v() {
  local files
  files=$(grep --color=none -v '^#' ~/.vim_mru_files |
          while read -r line; do
            [ -f "${line/\~/$HOME}" ] && echo "$line"
          done | fzf-tmux -d -m -q "$*" -1) && vim ${files//\~/$HOME}
}

# vim:ts=2:sts=2:sw=2:et:ft=sh
