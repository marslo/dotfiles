#!/usr/bin/env bash
#shellcheck source=/dev/null disable=SC2034,SC2154,SC2155,SC2086,SC2089,SC2090
# =============================================================================
#     FileName : .env
#       Author : marslo.jiao@gmail.com
#      Created : 2020-08-25 15:26:55
#   LastChange : 2025-06-28 01:32:02
# =============================================================================

# bat
export BAT_PAGER="less -RFX"
export BAT_THEME='gruvbox-dark'
# colors
export CLICOLOR=1
# default: dircolors -b
LS_COLORS='bd=38;5;68:ca=38;5;17:cd=38;5;113;1:di=38;5;108:do=38;5;127:ex=38;5;143;1:pi=38;5;126:fi=0:ln=target:mh=38;5;222;1:no=0:or=48;5;196;38;5;232;1:ow=38;5;220;1:sg=48;5;3;38;5;0:su=38;5;220;1;3;100;1:so=38;5;197:st=38;5;86;48;5;234:tw=48;5;235;38;5;139;3:'
LS_COLORS+='*.7z=38;5;64:*.WARC=38;5;64:*.a=38;5;64:*.arj=38;5;64:*.br=38;5;64:*.bz2=38;5;64:*.cpio=38;5;64:*.gz=38;5;64:*.lrz=38;5;64:*.lz=38;5;64:*.lzma=38;5;64:*.lzo=38;5;64:*.rar=38;5;64:*.s7z=38;5;64:*.sz=38;5;64:*.tar=38;5;64:*.tbz=38;5;64:*.tgz=38;5;64:*.warc=38;5;64:*.xz=38;5;64:*.z=38;5;64:*.zip=38;5;64:*.zipx=38;5;64:*.zoo=38;5;64:*.zpaq=38;5;64:*.zst=38;5;64:*.zstd=38;5;64:*.zz=38;5;64:*@.service=38;5;45:'
LS_COLORS+='*.pub=0;3:*.env=0;3:*.alias=0;3:*.1p=38;5;7:*.32x=38;5;213:*.3g2=38;5;115:*.3ga=38;5;137;1:*.3gp=38;5;115:*.3p=38;5;7:*.82p=38;5;121:*.83p=38;5;121:*.8eu=38;5;121:*.8xe=38;5;121:*.8xp=38;5;121:*.A64=38;5;213:*.BUP=38;5;241:*.CFUserTextEncoding=38;5;239;3:*.F=38;5;81:*.F03=38;5;81:*.F08=38;5;81:*.F90=38;5;81:*.F95=38;5;81:*.IFO=38;5;114:*.M=38;5;110:*.PDF=38;5;141:*.PFA=38;5;66:*.PL=38;5;160:*.RData=38;5;178:*.Rproj=38;5;11:*.S=38;5;110:*.S3M=38;5;137;1:*.SKIP=38;5;244:*.TIFF=38;5;97:*.VOB=38;5;115;1:*.a00=38;5;213:*.a52=38;5;213:*.a64=38;5;213:*.a78=38;5;213:*.aac=38;5;137;1:*.accdb=38;5;60:*.accde=38;5;60:*.accdr=38;5;60:*.accdt=38;5;60:*.adf=38;5;213:*.adoc=38;5;184:*.afm=38;5;66:*.agda=38;5;81:*.agdai=38;5;110:*.ai=38;5;99:*.aiff=38;5;136;1:*.alac=38;5;136;1:*.allow=38;5;112:*.am=38;5;242;3:*.amr=38;5;137;1:*.application=38;5;116:*.aria2=38;5;241:*.asciidoc=38;5;184:*.asf=38;5;115:*.asm=38;5;81:*.ass=38;5;117:*.astro=38;5;135;1:*.atr=38;5;213:*.au=38;5;137;1:*.automount=38;5;45:*.bib=38;5;178:*.bsp=38;5;215:*.cab=38;5;215:*.caf=38;5;137;1:*.cap=38;5;29:*.car=38;5;57:*.cbr=38;5;141:*.cbz=38;5;141:*.cda=38;5;136;1:*.cdi=38;5;213:*.cdr=38;5;97:*.chm=38;5;141:*.cjs=38;5;074;1:*.cl=38;5;81:*.clj=38;5;41:*.cljc=38;5;41:*.cljs=38;5;41:*.cljw=38;5;41:*.cnc=38;5;7:*.coffee=38;5;079;1:*.comp=38;5;136:*.cp=38;5;75:*.cr=38;5;81:*.crx=38;5;215:*.cs=38;5;81:*.csv=38;5;78:*.ctp=38;5;81:*.cue=38;5;116:*.dart=38;5;51:*.dat=38;5;137;1:*.db=38;5;60:*.def=38;5;7:*.deny=38;5;196:*.description=38;5;116:*.device=38;5;45:*.dhall=38;5;178:*.dicom=38;5;97:*.diff=38;5;209;3;4:*.directory=38;5;116:*.divx=38;5;114:*.djvu=38;5;141:*.dmp=38;5;29:*.doc=38;5;111:*.docm=38;5;111;4:*.docx=38;5;111:*.drw=38;5;99:*.dtd=38;5;178:*.dts=38;5;137;1:*.dwg=38;5;216:*.dylib=38;5;150;3:*.so=38;5;140;3:*.ear=38;5;215:*.ejs=38;5;135;1:*.el=38;5;81:*.elc=38;5;241:*.eln=38;5;241:*.eml=38;5;90;1:*.entitlements=1:*.epf=1:*.eps=38;5;99:*.epsf=38;5;99:*.epub=38;5;141:*.err=38;5;160;1:*.error=38;5;160;1:*.etx=38;5;184:*.ex=38;5;7:*.example=38;5;7:*.f=38;5;81:*.f03=38;5;81:*.f08=38;5;81:*.f4v=38;5;115:*.f90=38;5;81:*.f95=38;5;81:*.fcm=38;5;137;1:*.feature=38;5;7:*.flac=38;5;136;1:*.flif=38;5;97:*.flv=38;5;115:*.fm2=38;5;213:*.fmp12=38;5;60:*.fnt=38;5;66:*.fon=38;5;66:*.for=38;5;81:*.fp7=38;5;60:*.frag=38;5;136:*.ftn=38;5;81:*.fvd=38;5;202:*.fxml=38;5;178:*.gb=38;5;213:*.gba=38;5;213:*.gbc=38;5;213:*.gbr=38;5;7:*.gel=38;5;213:*.gemspec=38;5;41:*.ger=38;5;7:*.gg=38;5;213:*.ggl=38;5;213:*.gp3=38;5;115:*.gp4=38;5;115:*.gs=38;5;81:*.hi=38;5;110:*.hidden-color-scheme=38;5;241;3:*.hidden-tmTheme=38;5;241;3:*.hin=38;5;242;3:*.hjson=38;5;178:*.hpp=38;5;110:*.hs=38;5;81:*.htm=38;5;125;1:*.http=38;5;90;1:*.hxx=38;5;110:*.ii=38;5;110:*.iml=38;5;166:*.in=38;5;242;3:*.info=38;5;184:*.ini=38;5;139;3:*.ipa=38;5;215:*.ipk=38;5;213:*.ipynb=38;5;41:*.j64=38;5;213:*.jad=38;5;215:*.jhtm=38;5;125;1:*.jsm=38;5;079;1:*.jsonc=38;5;178:*.jsonl=38;5;178:*.jsonnet=38;5;178:*.jsp=38;5;079;1:*.jsx=38;5;074;1:*.jxl=38;5;97:*.kak=38;5;172:*.key=38;5;166:*.lagda=38;5;81:*.lagda.rst=38;5;81:*.lagda.tex=38;5;81:*.last-run=1:*.lhs=38;5;81:*.libsonnet=38;5;142:*.lisp=38;5;81:*.lnk=38;5;97;5:*.localized=38;5;239;3:*.localstorage=38;5;60:*.m=38;5;110:*.m2v=38;5;114:*.m3u=38;5;116:*.m3u8=38;5;116:*.m4=38;5;242;3:*.m4a=38;5;137;1:*.m4v=38;5;114:*.map=38;5;7:*.md5=38;5;116:*.mdb=38;5;60:*.mde=38;5;60:*.mdx=38;5;184:*.merged-ca-bundle=1:*.mf=38;5;7:*.mfasl=38;5;7:*.mht=38;5;125;1:*.mi=38;5;7:*.mid=38;5;136;1:*.midi=38;5;136;1:*.mjs=38;5;074;1:*.mkd=38;5;184:*.mkv=38;5;114:*.ml=38;5;81:*.mm=38;5;7:*.mobi=38;5;141:*.mod=38;5;137;1:*.moon=38;5;81:*.mount=38;5;45:*.mpg=38;5;114:*.msg=38;5;178:*.mtx=38;5;7:*.mustache=38;5;135;1:*.mysql=38;5;222:*.nc=38;5;60:*.ndjson=38;5;178:*.nds=38;5;213:*.nes=38;5;213:*.nfo=38;5;184:*.nib=38;5;57:*.nim=38;5;81:*.nimble=38;5;81:*.nix=38;5;155:*.nrg=38;5;202:*.nth=38;5;97:*.numbers=38;5;112:*.o=38;5;241:*.odb=38;5;111:*.odp=38;5;166:*.ods=38;5;112:*.odt=38;5;111:*.oga=38;5;137;1:*.ogg=38;5;137;1:*.ogm=38;5;114:*.ogv=38;5;115:*.opus=38;5;137;1:*.otf=38;5;66:*.pacnew=38;5;33:*.pages=38;5;111:*.pak=38;5;215:*.part=38;5;239:*.patch=38;5;102;3;4:*.path=38;5;45:*.pbxproj=1:*.pc=38;5;7:*.pcap=38;5;29:*.pcb=38;5;7:*.pcf=1:*.pcm=38;5;136;1:*.pdf=38;5;141:*.pfa=38;5;66:*.pfb=38;5;66:*.pfm=38;5;66:*.pgn=38;5;178:*.pgsql=38;5;222:*.pi=38;5;7:*.pid=38;5;248:*.pk3=38;5;215:*.pl=38;5;208:*.plist=1:*.plt=38;5;7:*.ply=38;5;216:*.pm=38;5;203:*.png=38;5;97:*.pod=38;5;184:*.pot=38;5;7:*.pps=38;5;166:*.ppt=38;5;166:*.ppts=38;5;166:*.pptsm=38;5;166;4:*.pptx=38;5;166:*.pptxm=38;5;166;4:*.prisma=38;5;222:*.properties=38;5;116:*.prql=38;5;222:*.ps=38;5;99:*.psd=38;5;97:*.psf=1:*.pug=38;5;135;1:*.pxd=38;5;97:*.pxm=38;5;97:*.qcow=38;5;202:*.rdata=38;5;178:*.rdf=38;5;7:*.rkt=38;5;81:*.rlib=38;5;241:*.rmvb=38;5;114:*.rnc=38;5;178:*.rng=38;5;178:*.rom=38;5;213:*.rss=38;5;178:*.rst=38;5;184:*.rstheme=1:*.rtf=38;5;111:*.s3m=38;5;137;1:*.sample=38;5;114:*.sc=38;5;41:*.scan=38;5;242;3:*.sch=38;5;7:*.scm=38;5;7:*.scpt=38;5;219:*.scss=38;5;105;1:*.sed=38;5;172:*.service=38;5;45:*.sfv=38;5;116:*.sgml=38;5;178:*.sid=38;5;137;1:*.sis=38;5;7:*.sms=38;5;213:*.socket=38;5;45:*.sparseimage=38;5;202:*.spl=38;5;7:*.spv=38;5;217:*.srt=38;5;117:*.ssa=38;5;117:*.st=38;5;213:*.state=38;5;248:*.stderr=38;5;160;1:*.stl=38;5;216:*.storyboard=38;5;196:*.strings=1:*.sty=38;5;7:*.sub=38;5;117:*.sublime-*=1:*.sug=38;5;7:*.sup=38;5;117:*.svelte=38;5;135;1:*.svg=38;5;99:*.swo=38;5;244:*.sx=38;5;81:*.target=38;5;45:*.tdy=38;5;7:*.tfnt=38;5;7:*.tfstate=38;5;168:*.tfvars=38;5;168:*.tg=38;5;7:*.theme=38;5;116:*.tif=38;5;97:*.tiff=38;5;97:*.timer=38;5;45:*.tmTheme=1:*.toast=38;5;202:*.tsv=38;5;78:*.tsx=38;5;074;1:*.ttf=38;5;66:*.twig=38;5;81:*.typelib=38;5;60:*.urlview=38;5;116:*.user-ca-bundle=1:*.v=38;5;81:*.vala=38;5;81:*.vapi=38;5;81:*.vcard=38;5;7:*.vcd=38;5;202:*.vcf=38;5;7:*.vdf=38;5;215:*.vdi=38;5;202:*.vert=38;5;136:*.vfd=38;5;202:*.vhd=38;5;202:*.vhdx=38;5;202:*.vmdk=38;5;202:*.vob=38;5;115;1:*.vpk=38;5;215:*.vtt=38;5;117:*.vue=38;5;135;1:*.wav=38;5;136;1:*.webloc=38;5;116:*.webm=38;5;115:*.webp=38;5;97:*.wgsl=38;5;97:*.woff=38;5;66:*.woff2=38;5;66:*.wrl=38;5;216:*.wv=38;5;136;1:*.wvc=38;5;136;1:*.xcf=38;5;7:*.xcsettings=1:*.xcuserstate=1:*.xcworkspacedata=1:*.xib=38;5;208:*.xla=38;5;76:*.xln=38;5;7:*.xls=38;5;112:*.xlsx=38;5;112:*.xlsxm=38;5;112;4:*.xltm=38;5;73;4:*.xltx=38;5;73:*.xpi=38;5;215:*.xpm=38;5;97:*.xsd=38;5;178:*.xsh=38;5;41:*.z[0-9]{0,2}=38;5;239:*.zig=38;5;81:*.zwc=38;5;241:*.zx[0-9]{0,2}=38;5;239:'
# encrypted files
LS_COLORS+='*.enc=38;5;69;3:*.gpg=38;5;69;3:*.p12=38;5;69;3:*.p7s=38;5;69;3:*.pem=38;5;69;3:*.pgp=38;5;69;3:*.sig=38;5;69;3:*.signature=38;5;69;3:*.asc=38;5;69;3:*.bfe=38;5;69;3:*.current=38;5;69;3:*.cifs=38;5;239;3:*.ctags=38;5;239;3:'
# packages
LS_COLORS+='*.apk=38;5;215:*.deb=38;5;215:*.dll=38;5;241:*.dmg=38;5;215:*.rpm=38;5;215:*.war=38;5;215:*.bin=38;5;202:*.iso=38;5;202:*.jar=38;5;215:*.out=38;5;242;3:'
# dump/log
LS_COLORS+='*.bak=38;5;241;3:*.dump=38;5;241;3:*.mdump=38;5;241;3:*.stackdump=38;5;241;3:*.zcompdump=38;5;241;3:*.snapshot=38;5;45:*.swap=38;5;241;3:*.swp=38;5;241;3:*.tmp=38;5;239;3:*.viminfo=38;5;242;3:*vim_mru_files=38;5;242;3:*.wget-hsts=38;5;239;3:*.DS_Store=38;5;239;3:*.old=38;5;239;3:*.org=38;5;241;3:*.norg=38;5;241;3:*.orig=38;5;241;3:*.sav=38;5;241;3:*.log=38;5;241;3:*.un~=38;5;241;3:'
# audio/video
LS_COLORS+='*.wma=38;5;137;1:*.wmv=38;5;114:*.JPG=38;5;97:*.MOV=38;5;114:*.ape=38;5;136;1:*.avi=38;5;114:*.bmp=38;5;97:*.gif=38;5;97:*.icns=38;5;97:*.ico=38;5;97:*.ics=38;5;7:*.img=38;5;202:*.jpeg=38;5;97:*.jpg=38;5;97:*.mov=38;5;114:*.mp3=38;5;137;1:*.mp4=38;5;114:*.mp4a=38;5;137;1:*.mpeg=38;5;114:*.torrent=38;5;116:*.ts=38;5;074;1:'
# docs
LS_COLORS+='*AUTHORS=38;5;172;1:*CHANGELOG=38;5;172;1:*CHANGES=38;5;172;1:*CODEOWNERS=38;5;172;1:*CONTRIBUTING=38;5;172;1:*CONTRIBUTORS=38;5;172;1:*COPYING=38;5;172;1:*COPYRIGHT=38;5;172;1:*CodeResources=38;5;239:*Containerfile=38;5;143:*INSTALL=38;5;220;1:*LICENSE=38;5;220;1:*LS_COLORS=38;5;197;1;3;4:*MANIFEST=38;5;243:*[Mm]akefile=38;5;143:*NOTICE=38;5;220;1:*PATENTS=38;5;220;1:*PkgInfo=38;5;239:*README.rst=38;5;172;1:*VERSION=38;5;172;1:*authorized_keys=0;3:*core=38;5;241:*config=0;3:*config.win=0;3:*lock=38;5;248:*lockfile=38;5;248:*pm_to_blib=38;5;264:'
# git
LS_COLORS+='*.git=38;5;133;3:*.gitattributes=38;5;133;3:*commit-template=38;5;241;3:*.gitalias=38;5;241;3:*.gitcolors=38;5;241;3:*.gitignore_global=38;5;241;3:*.gitignore=38;5;241;3:*.github=38;5;133:*.gitmodules=38;5;133;3:*.git-credentials=38;5;239;3:*.git-stats=38;5;239;3:'
# program/script
LS_COLORS+='*.bat=38;5;134:*.BAT=38;5;134:*.sh=38;5;143:*.bash=38;5;143:*.fish=38;5;134:*.zsh=38;5;134:*.py=38;5;99:*.pyc=38;5;105:*.go=38;5;81:*.h=38;5;110:*.h++=38;5;110:*.c=38;5;75:*.cc=38;5;75:*.c++=38;5;75:*.cpp=38;5;75:*.cxx=38;5;75:*.tcc=38;5;110:*.r=38;5;143:*.R=38;5;143:*.r[0-9]{0,2}=38;5;239:*.rake=38;5;155:*.groovy=38;5;186:*.rb=38;5;184:*.ahk=38;5;184:*.awk=38;5;184:*.less=38;5;105;1:*.css=38;5;105;1:*.html=38;5;136;1:*.java=38;5;079;1:*.json=38;5;178:*.json5=38;5;178:*.markdown=38;5;134:*.md=38;5;134:*.msql=38;5;222:*.php=38;5;81:*.sass=38;5;105;1:*.sassc=38;5;244:*.swift=38;5;219:*.tcl=38;5;64;1:*.txt=38;5;253:*.vim=38;5;134:*.xml=38;5;178:*.yaml=38;5;178:*.yml=38;5;178:*.vb=38;5;81:*.vba=38;5;81:*.vbs=38;5;81:*.js=38;5;183;1:*.lua=38;5;178:*.rs=38;5;178:*.ru=38;5;7:*.s=38;5;110:*.scala=38;5;114:*.sql=38;5;222:*.sqlite=38;5;60:*.t=38;5;114:*.tex=38;5;215:*.textile=38;5;215:*.tf=38;5;168:*.tfm=38;5;7:*.toml=38;5;178:*[Dd]ockerfile=38;5;143:'
# system rc
LS_COLORS+='*history=38;5;241;3:*hst=38;5;241;3:*token=38;5;239;3:*.pw=38;5;239;3:*rc=38;5;104;3:*rc.json=38;5;104;3:*rc.js=38;5;104;3:*.config.js=38;5;104;3:*rc.yaml=38;5;104;3:*.gitbash=38;5;66;3:*.profile=0;3:*.profile.wsl=0;3:*.bash_login=0;3:*.bash_logout=0;3:*.bash_profile=0;3:*.bash_completion=0;3:*.zlogin=0;3:*.zlogout=0;3:*.zprofile=0;3:*.zshenv=0;3:*id_dsa=38;5;192;3:*id_ecdsa=38;5;192;3:*id_ed25519=38;5;192;3:*id_rsa=38;5;192;3:*known_hosts=0;3:*known_hosts.old*=38;5;241;3:*cfg=0;3:*conf=0;3:*ignore=38;5;241;3:*ignore_global=38;5;241;3:*.containerignore=38;5;241;3:*.dockerignore=38;5;241;3:'
export LS_COLORS
export GREP_COLORS="ms=0;1;4;33;49:mc=0;4;33:sl=3;36:cx=:fn=3;35:ln=3;32:bn=32:se=3;35"
# export GREP_OPTIONS='--color=always'
export EDITOR=nvim
export KEYTIMEOUT=1
export QUOTING_STYLE=literal
export TERM=xterm-256color

# the color of man page
# - https://unix.stackexchange.com/a/147/29178
if [[ '1' = "$(isWSL)" ]]; then
  export LESS_TERMCAP_mb=$(printf "\e[1;31m")          # begin blinding
  export LESS_TERMCAP_md=$(printf "\e[1;31m")          # begin bold
  export LESS_TERMCAP_me=$(printf "\e[0m")             # end mode
  export LESS_TERMCAP_se=$(printf "\e[0m")             # end stadout-mode
  export LESS_TERMCAP_so=$(printf "\e[1;44;33m")       # begin stadout-mode - info box
  export LESS_TERMCAP_ue=$(printf "\e[0m")             # end underline
  export LESS_TERMCAP_us=$(printf "\e[1;32m")          # begin underline
else
  export LESS_TERMCAP_mb=$(printf "\\e[1;31m")         # begin blinding
  export LESS_TERMCAP_md=$(printf "\\e[3;31m")         # begin bold
  export LESS_TERMCAP_me=$(printf "\\e[0m")            # end mode
  export LESS_TERMCAP_se=$(printf "\\e[0m")            # end stadout-mode
  export LESS_TERMCAP_so=$(printf "\\e[1;44;33m")      # begin stadout-mode - info box
  export LESS_TERMCAP_ue=$(printf "\\e[0m")            # end underline
  export LESS_TERMCAP_us=$(printf "\\e[3;32m")         # begin underline
fi
export LESS='-eirMXR'                                # export LESS="-eirMX"
export SYSTEMD_LESS=FRXMK
export GROFF_NO_SGR=1                                # konsole and gnome-terminal
# export MANPAGER='less -s -M +Gg'
export MANPAGER="bash -c 'col -bx | bat --language=man --plain --paging always --color always --theme=gruvbox-dark-marslo'"
export MANROFFOPT='-c'

# disable for bat
# - [using vim as man-page](https://vim.fandom.com/wiki/Using_vim_as_a_man-page_viewer_under_Unix)
# export PAGER="/bin/sh -c \"unset PAGER;col -b -x | \
#     vim -R -c 'set ft=man nomod nolist' -c 'map q :q<CR>' \
#     -c 'map <SPACE> <C-D>' -c 'map b <C-U>' \
#     -c 'nmap K :Man <C-R>=expand(\\\"<cword>\\\")<CR><CR>' -\""
# export PAGER='less -FXR'

# history settings
export HISTTIMEFORMAT='%F %T '
export HISTFILESIZE=10000
export HISTSIZE=2000
export HISTCONTROL=ignoreboth:erasedups

# for bash-complication@2 & gradle-complication
export GRADLE_COMPLETION_EXCLUDE_PATTERN='/(integTest|samples|smokeTest|testFixtures|templates|out|features)/'

# https://sidd.io/2023/01/github-copilot-self-signed-cert-issue/
test -f "$HOME/.config/nvim/certs/copilot.root-ca.pem" && export NODE_EXTRA_CA_CERTS="$HOME/.config/nvim/certs/copilot.root-ca.pem"
# https://github.com/orgs/community/discussions/39726#discussioncomment-4288242
export NODE_TLS_REJECT_UNAUTHORIZED=
# or using shebang: `#!/usr/bin/env node --no-warnings=ExperimentalWarning`
export NODE_NO_WARNINGS=1

# https://lists.zx2c4.com/pipermail/password-store/2018-January/003170.html
# PASSWORD_STORE_CHARACTER_SET='[:alnum:].,!?&*%_~$#^@{}[]()<>|=/\+-'
export PASSWORD_STORE_CHARACTER_SET='[:alnum:][]<>()\,.@_!^%'
export PASSWORD_STORE_CLIP_TIME=20
export PASSWORD_STORE_ENABLE_EXTENSIONS=true

# https://askubuntu.com/a/1428473/92979
export DOCKER_COMPLETION_SHOW_CONTAINER_IDS=true

# pyvenv
export VIRTUAL_ENV_DISABLE_PROMPT=1
# pip install
export PIP_BREAK_SYSTEM_PACKAGES=true

export LANG=en_US.UTF-8
export LANGUAGE=$LANG
export LC_COLLATE=$LANG
export LC_CTYPE=$LANG
export LC_MESSAGES=$LANG
export LC_MONETARY=$LANG
export LC_NUMERIC=$LANG
export LC_TIME=$LANG
export LC_ALL=$LANG

MARSLO_BINS="${iRCHOME}/bin"
USR_LOCAL="/usr/local"
NVIM_HOME="/usr/local/nvim"
GIT_DEPOT_TOOLS="$HOME/iMarslo/tools/git/tools/depot_tools"
GOPATH="${MARSLO_BINS}/go"
CARGO_PATH="$HOME/.cargo"                            # brew install cargo
SDKMAN_DIR="$HOME/.sdkman"
SNAP_BIN='/snap/bin'
NPM_CONFIG_PREFIX="$HOME/.npm"
GROOVY_USER_HOME="$HOME/.groovy"
KW_BUILD_TOOLS='/opt/kwbuildtools'
FONT_PATCHER='/opt/FontPatcher'
SMTOOLS_HOME='/opt/smtools-linux-x64'
VOLTA_HOME="$HOME/.volta"
ENVMAN_PATH="$HOME/.config/envman"
test -d "${MARSLO_BINS}"         && LOCAL_PATH="${MARSLO_BINS}"
test -d "${NVIM_HOME}"           && [[ ":$PATH:" != *":$NVIM_HOME/bin:"*      ]] && LOCAL_PATH+=":$NVIM_HOME/bin"
# check ~/.profile for duplication
test -d "$HOME/.local/bin"       && [[ ":$PATH:" != *":$HOME/.local/bin:"*    ]] && LOCAL_PATH+=":$HOME/.local/bin"               # created by `pipx` on 2023-07-12 21:11:00
test -d "${USR_LOCAL}/bin"       && [[ ":$PATH:" != *":${USR_LOCAL}/bin:"*    ]] && LOCAL_PATH+=":${USR_LOCAL}/bin"
test -d "${GIT_DEPOT_TOOLS}"     && GIT_DEPOT_TOOLS="$HOME/iMarslo/tools/git/tools/depot_tools"
test -d "${GOPATH}/bin"          && [[ ":$PATH:" != *":${GOPATH}/bin:"*       ]] && LOCAL_PATH+=":${GOPATH}/bin"
test -d "${CARGO_PATH}/bin"      && [[ ":$PATH:" != *":${CARGO_PATH}/bin:"*   ]] && LOCAL_PATH+=":${CARGO_PATH}/bin"
test -d "${SNAP_BIN}"            && [[ ":$PATH:" != *":${SNAP_BIN}"*          ]] && LOCAL_PATH+=":${SNAP_BIN}"
test -d "$HOME/.marslo/git-info" && [[ ":$PATH:" != *"~/.marslo/git-info"*    ]] && LOCAL_PATH+=~/.marslo/git-info":"
test -d "${KW_BUILD_TOOLS}"      && LOCAL_PATH+=":${KW_BUILD_TOOLS}/bin"
test -d "${FONT_PATCHER}"        && LOCAL_PATH+=":${FONT_PATCHER}"
test -d "${SMTOOLS_HOME}"        && LOCAL_PATH+=":${SMTOOLS_HOME}"
test -d "${SDKMAN_DIR}"          && export SDKMAN_DIR
test -d "${CARGO_PATH}"          && export CARGO_PATH
test -d "${GOPATH}"              && export GOPATH
test -d "${NPM_CONFIG_PREFIX}"   && export NPM_CONFIG_PREFIX
test -d "${NPM_CONFIG_PREFIX}"   && [[ ":$PATH:" != *":${NPM_CONFIG_PREFIX}"* ]] && ADDITIONAL_PATH=":${NPM_CONFIG_PREFIX}/bin"
test -d "${GROOVY_USER_HOME}"    && export GROOVY_USER_HOME
test -s "${ENVMAN_PATH}/load.sh" && source "${ENVMAN_PATH}/load.sh"
export PATH="${LOCAL_PATH}:${PATH}:${ADDITIONAL_PATH}:${VOLTA_HOME}/bin"

if [[ '1' = "$(isWSL)" ]]; then
  WINDOWS_PATH="/mnt/c/Windows/"
  WINDOWS_PATH+=":/mnt/c/Windows/system32"
  WINDOWS_PATH+=":/mnt/c/Windows/system32/Wbem"
  # https://stackoverflow.com/a/63195953/2940319
  PATH=$(/usr/bin/printenv PATH | /usr/bin/perl -ne 'print join(":", grep { !/\/mnt\/[a-z]/ } split(/:/));')
  export PATH=$PATH:$WINDOWS_PATH

  # build python from source
  export PYTHON_HOME='/opt/python/Python-3.12.2'
  export LD_LIBRARY_PATH=$PYTHON_HOME:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH
fi

# credentials
# export GIT_ASKPASS="$HOME/.marslo/.git-credentials.sh"
# debug
# export GIT_TRACE=1
# export GIT_TRACE_PERFORMANCE=1
export GIT_SSL_NO_VERIFY=true
# unstaged (*) and staged (+)
export GIT_PS1_SHOWDIRTYSTATE=true
# %
export GIT_PS1_SHOWUNTRACKEDFILES=true
# $
export GIT_PS1_SHOWSTASHSTATE=true

if test -d '/opt/gradle/gradle-4.8'; then export GRADLE_HOME='/opt/gradle/gradle-4.8'; fi
if test -d '/opt/maven/apache-maven-3.6.1'; then
  M2_HOME="/opt/apache-maven-3.6.1"
  M2="${M2_HOME}/bin"
  MAVEN_OPTS="-Xms256m -Xmx512m"
  PATH=$PATH:$M2
  export M2_HOME M2 MAVEN_OPTS PATH
fi
if test -d '/opt/android'; then
  ANDROID_HOME='/opt/android'
  ANDROID_NDK_HOME="$ANDROID_HOME/android-ndk"
fi

#╭╶ (USERNAME@HOSTNAME PATH) - (git-branch) ⏵
#╰╶ ᓆ  $
#
# https://misc.flogisoft.com/bash/tip_colors_and_formatting
#    --------+--------    ----+------+------
#  | 0\;xxm | Normal |   | \e | \033 | \x1B |
#  | 1\;xxm | Bright |    ----+------+------
#   --------+--------              ---------------------------------
#   ----+---+---+----+---+----    |         UNICODE SYMBOL          |
#  | ⌌・| ⠋ | ⌜ | ╭╶ | ┌ | ┌─ |    ---------------------------------
#  | ⌎・| ⠦ | ⌞ | ╰╶ | └ | └─ |   | ✔ ✘ ⏵ ► ▶ ▷ ▸ ⌁ ↯ ✘ ö Ö ➜  ▶ ⨯ |
#   ----+---+---+----+---+----     ---------------------------------
#  ---+--------------++---------------------++----------------------+    +-----------------
# | # |  COLOR NAME  ||      FOREGRAND      ||      BACKGROUND      |    |   ATTRIBUTE     |
#  ---+--------------++---------------------++----------------------+    +---+-------------
# | 9 | Default      ||      \e[0;39m       ||       e[0;49m        |    | 0 | Normal      |
# | 0 | Black        || \e[0;30m |          || \e[0;40m |           |    | 1 | Bold        |
# | 1 | Red          || \e[0;31m |          || \e[0;41m |           |    | 2 | Faint       |
# | 2 | Green        || \e[0;32m |          || \e[0;42m |           |    | 3 | Italic      |
# | 3 | Yellow       || \e[0;33m |          || \e[0;43m |           |    | 4 | Underline   |
# | 4 | Blue         || \e[0;34m |          || \e[0;44m |           |    | 5 | Slow Blink  |
# | 5 | Purple       || \e[0;35m |          || \e[0;45m |           |    | 6 | Rapid Blink |
# | 6 | Cyan         || \e[0;36m |          || \e[0;46m |           |    | 7 | reverse     |
# | 7 | Light Gray   || \e[0;37m |          || \e[0;47m |           |     ---+-------------
# | 0 | Dark Gray    || \e[1;30m | \e[0;90m || \e[1;40m | \e[0;100m |     ---------------------
# | 1 | Light Red    || \e[1;31m | \e[0;91m || \e[1;41m | \e[0;101m |    |       OTHERS        |
# | 2 | Light Green  || \e[1;32m | \e[0;92m || \e[1;42m | \e[0;102m |     -------------+-------
# | 3 | Light Yellow || \e[1;33m | \e[0;93m || \e[1;43m | \e[0;103m |    | color none  | \e[0m |
# | 4 | Light Blue   || \e[1;34m | \e[0;94m || \e[1;44m | \e[0;104m |    | color reset | \e[1m |
# | 5 | Light Purple || \e[1;35m | \e[0;95m || \e[1;45m | \e[0;105m |     -------------+-------
# | 6 | Light Cyan   || \e[1;36m | \e[0;96m || \e[1;46m | \e[0;106m |     ----------------+---------------------------------
# | 7 | White        ||      \e[0;97m       ||      \e[0;107m       |    | \[\e[xx;0m]\]  | system color                    |
#  ---+--------------++---------------------++----------------------     | \[\e[xx\;0m]\] | system color in ``              |
# |   |              ||  \e[38;5;{0..255}m# ||  \e[48;5;{0..255}m#  |    | \[\e[0;xxm]\]  | profile color (solarized)       |
#  ---+--------------++---------------------++----------------------     | \[\e[0\;xxm]\] | profile color (solarized) in `` |
#                                                                         ----------------+---------------------------------
#  ------------+-------------------------------------------------------   ----------------+-------------------------------
# |                   256 COLORS STANDARD FORMAT                       | |                   COMMENTS                     |
#  ------------+-------------------------------------------------------   ----------------+-------------------------------
# | attributes | 0 1 2 3 4 5 6 7                                       | | COL_NONE       | no color                      |
# | foregrand  | {0..255}                                              | | COL_RESET      | reset color                   |
# | background | {30..37} {90..97} 39                                  | | COL_DEFAULT    | default color                 |
#  ------------+-------------------------------------------------------  | COL_IF_DEFAULT | default color in if-statement |
# | usage : \e[${attributes};{background};5;${foreground}m <str> \e[0m |  ----------------+-------------------------------
#  ------------+-------------------------------------------------------

UMARK='\[\033(0\]l\[\033(B\]'
DMARK='\[\033(0\]m\[\033(B\]'
LMARK='\[\033(0\]q\[\033(B\]'

COL_SL_GREEN='\[\033[32;0m\]'                     # COL_SL_GREEN='\[\e[0;32m\]'
COL_SD_GREEN='\[\033[32;2m\]'                     # COL_SD_GREEN='\[\033[2;32m\]'
COL_SD_YELLOW='\[\033[1;33m\]'
COL_SD_PURPLE='\[\033[38;5;98;3m\]'
COL_SL_YELLOW='\[\033[0;33m\]'
COL_B_YELLOW='\[\033[2;33m\]'
COL_L_YELLOW='\[\033[33;0m\]'
COL_IF_SD_YELLOW='\[\033[2\;33m\]'

COL_D_BLACK='\[\033[30;1m\]'
COL_L_BLACK='\[\033[30;0m\]'
COL_SD_BLACK='\[\033[1;30m\]'
COL_SL_BLACK='\[\033[0;30m\]'
COL_SD_RED='\[\033[1;31m\]'
COL_SL_RED='\[\033[0;31m\]'
COL_SD_BLUE='\[\033[1;34m\]'
COL_SL_BLUE='\[\033[0;34m\]'
COL_L_RED='\[\033[31;0m\]'
COL_D_RED='\[\033[31;1m\]'

COL_IF_D_BLACK='\[\033[30\;1m\]'
COL_IF_L_BLACK='\[\033[30\;0m\]'
COL_IF_SD_BLACK='\[\033[1\;30m\]'
COL_IF_SL_BLACK='\[\033[0\;30m\]'
COL_IF_SL_YELLOW='\[\033[0\;33m\]'
COL_IF_D_RED='\[\033[31\;1m\]'
COL_IF_SD_RED='\[\033[1\;31m\]'
COL_IF_SL_RED='\[\033[0\;31m\]'
COL_IF_SL_GREEN='\[\033[0\;32m\]'
COL_IF_SD_GREEN='\[\033[2\;32m\]'
COL_IF_SL_BLUE='\[\033[0\;34m\]'
COL_IF_SD_BLUE='\[\033[1\;34m\]'

# 38;5; for the foreground and 48;5; for the background : https://unix.stackexchange.com/a/124409/29178
function RGBcolor { echo "16 + $1 * 36 + $2 * 6 + $3" | bc; }

# https://marslo.github.io/ibook/screenshot/colors/ansi/color-formatting.png
fgc=$(RGBcolor 5 6 8)                             # 240;  fgc=$(RGBcolor 5 6 5)  # 237
# COL_DEFAULT=$"\e[38;5;${fgc}m"                  # COL_DEFAULT="\[$(tput -T $TERM setaf 237)\]" | COL_DEFAULT="\[\033[1;38;5;${fgc}m\]" | "${COL_SD_GREEN}"
COL_DEFAULT="\[\033[38;5;${fgc}m\]"               # "\[$(tput setaf ${fgc})\]"; $"\e[38;5;${fgc}m";
COL_IF_DEFAULT="\[\033[38\;5\;${fgc}m\]"          # COL_IF_DEFAULT="\[\033[1\;38\;5\;${fgc}m\]"  | COL_IF_DEFAULT="${COL_IF_SD_GREEN}"
COL_RESET='\[\033[1m\]'                           # COL_RESET="\[$(tput sgr0)\]" | COL_RESET='\[\033[1m\]'
COL_NONE='\[\033[0m\]'                            # COL_NONE='\[\033[38;5;3m\]'

# for windows git slow __git_ps1 performance issue
function show_git_ps1() {
  branch=$( (git symbolic-ref --short -q HEAD || git rev-parse --short HEAD) 2> /dev/null )
}

function _venv_info() {
  local exit_code=$?
  local printf_format=' [%s]'
  local venv=''
  [[ $# -eq 1 ]] && printf_format="$1"
  [[ -n "${VIRTUAL_ENV}" ]] && venv="${VIRTUAL_ENV##*/}"
  if [[ -n "${venv}" ]]; then
    # shellcheck disable=SC2059
    printf -- "${printf_format}" "${venv}"
  fi
  return $exit_code
}

PROMPT_FULL="\\n${COL_RESET}${COL_DEFAULT}╭╶ (\\u@\\h${COL_RESET} "
PROMPT_FULL+="${COL_SL_RED}\\w${COL_RESET}${COL_DEFAULT}) "
PROMPT_DEFAULT="\$(__git_ps1 \"- (${COL_SD_GREEN}%s${COL_NONE}${COL_DEFAULT}) \")"
PROMPT_DEFAULT+="\$(_venv_info \"- (${COL_SD_PURPLE}%s${COL_NONE}${COL_DEFAULT}) \")"
PROMPT_DEFAULT+="${COL_RESET}"
PROMPT_DEFAULT+="${COL_DEFAULT}\`if [ \$? = 0 ]; then echo ${COL_IF_DEFAULT}\-\>; else echo ${COL_IF_SL_RED}\↯; fi\`${COL_RESET}"
PROMPT_DEFAULT+="\\n${COL_DEFAULT}\$ ${COL_RESET}${COL_NONE}"
# PROMPT_DEFAULT+="\\n${COL_RESET}${COL_DEFAULT}╰╶ ${COL_DEFAULT}\$ ${COL_RESET}${COL_NONE}"

function ps1toggle() {
  PROMPT_SIMPLE="\\n${COL_RESET}${COL_DEFAULT}╭╶ (\\u${COL_RESET}${COL_DEFAULT}) "
  if echo "${PS1}" | grep --color=never -q '\\u@\\h'; then
    export PS1="${PROMPT_SIMPLE}${PROMPT_DEFAULT}"
  else
    export PS1="${PROMPT_FULL}${PROMPT_DEFAULT}"
  fi
}

PS1="${PROMPT_FULL}${PROMPT_DEFAULT}"
PS2="${COL_DEFAULT}> ${COL_RESET}${COL_NONE}"
PS4='+\033[37;2;3m($(basename ${BASH_SOURCE})\033[0m:\033[36;2;3m$(printf "%3d" ${LINENO})\033[0m\033[37;2;3m):\033[0m\033[35;2;3m${FUNCNAME[0]:+ ${FUNCNAME[0]}():}\033[0m '
# PS4=$'\n%B%F{0}+ %D{%T:%3.} %2N:%I%f%b '            # zsh

if [[ '1' = "$(isWSL)" || '1' = "$(isOSX)" ]]; then
  export PS1 PS2 PS4
else
  [ -z "$DISPLAY" ] && export PS1 PS2 PS4
fi

unset fgc
unset UMARK
unset DMARK
unset LMARK

# fzf
FZF_DEFAULT_OPTS="${FZF_DEFAULT_OPTS:+$FZF_DEFAULT_OPTS} "
FZF_DEFAULT_OPTS+="--height 35% --min-height 8+ "             # https://github.com/junegunn/fzf/issues/4226
FZF_DEFAULT_OPTS+="--layout=reverse --multi --cycle --ansi "
FZF_DEFAULT_OPTS+="--marker='󱍢 ' --pointer='▌' "
FZF_DEFAULT_OPTS+="--prompt='󰩀 ' --info='inline: 󰨿 ' "
FZF_DEFAULT_OPTS+="--info-command='echo \"\x1b[33;1m\$FZF_POS\x1b[m ~ \$FZF_INFO\"' "
FZF_DEFAULT_OPTS+="--bind 'ctrl-s:select-all,ctrl-d:deselect-all,ctrl-t:toggle-all' "
FZF_DEFAULT_OPTS+="--bind 'ctrl-y:execute-silent(/bin/echo -n {+} | ${COPY})' "
FZF_DEFAULT_OPTS+="--color=gutter:-1,bg+:-1,spinner:#e6db74,prompt:#404945,header:italic:#504945,info:#928374,pointer:#A66584,marker:#d79921,fg:#ebdbb2:dim,fg+:#A7A44E:regular,hl:#845069:italic,hl+:#A66584:bold:italic"

FZF_DEFAULT_COMMAND="fd --type f "
FZF_DEFAULT_COMMAND+="--strip-cwd-prefix "
FZF_DEFAULT_COMMAND+="--hidden "
FZF_DEFAULT_COMMAND+="--follow "
FZF_DEFAULT_COMMAND+="--exclude .git --exclude node_modules"

# ctrl-t for preview with bat
FZF_CTRL_T_OPTS="${FZF_CTRL_T_OPTS:+$FZF_CTRL_T_OPTS} "
FZF_CTRL_T_OPTS+="--height 80% "
FZF_CTRL_T_OPTS+="--no-input-border --header-lines-border bottom "
FZF_CTRL_T_OPTS+="--preview '([[ -f {} ]] && (bat --style=numbers --color=always {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200' "
FZF_CTRL_T_OPTS+="--bind 'enter:become:command nvim {} >/dev/tty' "
FZF_CTRL_T_OPTS+="--bind 'ctrl-/:change-preview-window(down|hidden|)' "
FZF_CTRL_T_OPTS+="--bind 'ctrl-p:preview-up,ctrl-n:preview-down' "
FZF_CTRL_T_OPTS+="--bind 'ctrl-y:execute-silent(/bin/echo -n {+} | ${COPY})' "
FZF_CTRL_T_OPTS+="--header 'CTRL-N/CTRL-P to view contents, CTRL-/ to change previous window'"
# FZF_CTRL_T_OPTS+=" --bind 'ctrl-e:become:command cd {} >/dev/tty'"

# ctrl-r for filter history
FZF_CTRL_R_OPTS="${FZF_CTRL_R_OPTS:+$FZF_CTRL_R_OPTS} "
FZF_CTRL_R_OPTS+="--height '30%' "
FZF_CTRL_R_OPTS+="--header-lines-border bottom --no-list-border "
FZF_CTRL_R_OPTS+="--preview 'echo {}' "
FZF_CTRL_R_OPTS+="--preview-window down:5:hidden:wrap "
FZF_CTRL_R_OPTS+="--bind 'ctrl-/:toggle-preview' "
FZF_CTRL_R_OPTS+="--bind 'ctrl-y:execute-silent(echo {2..} | ${COPY})+abort' "
FZF_CTRL_R_OPTS+="--color header:italic "
FZF_CTRL_R_OPTS+="--header 'CTRL-Y to copy command into clipboard'"

export FZF_COMPLETION_TRIGGER=',,'
export FZF_COMPLETION_DIR_COMMANDS="cd pushd rmdir tree"
export FZF_COMPLETION_OPTS='--border --info=inline'
export FZF_COMPLETION_DIR_OPTS='--walker dir,follow'
export FZF_COMPLETION_PATH_OPTS='--walker file,dir,follow,hidden'
export FZF_ALT_C_OPTS="--height 60% --walker-skip .git,node_modules,target --preview 'tree -C {}'"       # print tree structure in the preview window
export FZF_COMPLETION_PATH_COMMANDS="basename bunzip2 bzip2 chmod chown curl cp dirname ls mv rm open tar unzip du sftp rsync"
export FZF_DEFAULT_OPTS FZF_DEFAULT_COMMAND FZF_CTRL_T_OPTS FZF_CTRL_R_OPTS

export FD_IGNORE_FILE="${HOME}/.fdignore"

# kubecolor
# export KUBECOLOR_THEME_TABLE_COLUMNS="cyan/yellow/magenta/gray/yellow/cyan/yellow"
export KUBECOLOR_THEME_TABLE_HEADER="fg=magenta:bold:underline"
export KUBECOLOR_THEME_BASE_INFO="white"

# brew install --HEAD tlrc
[[ '1' = "$(isOSX)" && -f "${iRCHOME}/.tlrc.toml" ]] && export TLRC_CONFIG="${iRCHOME}/.tlrc.toml"

# brew install cheat
type -P cheat  &>/dev/null && export CHEAT_USE_FZF=true

# cht.sh for https://gist.github.com/marslo/27b15ead7d82cf65d407f37f6b55bb1a
type -P cht.sh &>/dev/null && export CHTSH_USE_BAT=true

# for git mcx
# using --body or --no-body to enable/disable the body insert
# export MCX_ENABLE_BODY=true

# vim:tabstop=2:softtabstop=2:shiftwidth=2:expandtab:filetype=sh:
