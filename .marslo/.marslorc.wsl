#!/usr/bin/env bash
# shellcheck disable=SC1090,SC1091,SC2034,SC1094
# =============================================================================
#   FileName : .marslorc.wsl
#     Author : marslo.jiao@gmail.com
#    Created : 2012
# LastChange : 2024-05-02 13:17:00
# =============================================================================

export iRCHOME="$HOME/.marslo"
# credit: https://github.com/ppo/bash-colors/blob/master/bash-colors.sh (v0.3.0)
source "${iRCHOME}/bin/bash-color.sh"

function isWSL()    { if uname -r | command grep --color=never -q -i 'microsoft'; then echo 1; fi; }
function isOSX()    { [[ 'Darwin' = $(uname) ]] && echo 1; }
function isLinux()  { [[ '1' != "$(isWSL)" ]] && [[ 'Linux' = $(uname) ]] && echo 1; }
function isDebian() { [[ 'debian' = $(awk -F '=' '/ID_LIKE/ { print $2 }' /etc/os-release) ]] && echo 1; }
function isFedora() { [[ $(awk -F '=' '/ID/ { print $2 }' /etc/os-release) =~ 'fedora'     ]] && echo 1; }
function isRHEL()   { [[ 'rhel'   = $(awk -F '=' '/ID/ { print $2 }' /etc/os-release)      ]] && echo 1; }
function isUbuntu() { [[ 'ubuntu' = $(awk -F '=' '/ID/ { print $2 }' /etc/os-release)      ]] && echo 1; }
function isCentOS() { [[ 'centos' = $(awk -F '=' '/ID/ { print $2 }' /etc/os-release)      ]] && echo 1; }
# for public server (use common account)
function bello()    { source ~/.marslo/.marslorc; set -o vi;  }
function bye()      { source "${iRCHOME}"/.bye; set -o emacs; }

# /--------------------------------------------------------------
#      _       __            _ _     _              _
#     | |     / _|          | | |   | |            | |
#   __| | ___| |_ __ _ _   _| | |_  | |_ ___   ___ | |___
#  / _` |/ _ \  _/ _` | | | | | __| | __/ _ \ / _ \| / __|
# | (_| |  __/ || (_| | |_| | | |_  | || (_) | (_) | \__ \
#  \__,_|\___|_| \__,_|\__,_|_|\__|  \__\___/ \___/|_|___/
#
# --------------------------------------------------------------/
if [[ '1' = "$(isWSL)" ]]; then
  # COPY='/mnt/c/Windows/System32/clip.exe'
  COPY="$(command -v wl-copy)"
elif [[ 'Darwin' = "$(uname)" ]]; then
  COPY="$(type -P pbcopy)"
else
  COPY=''
fi


# /--------------------------------------------------------------
#                            _      _   _
#                           | |    | | (_)
#   ___ ___  _ __ ___  _ __ | | ___| |_ _  ___  _ __
#  / __/ _ \| '_ ` _ \| '_ \| |/ _ \ __| |/ _ \| '_ \
# | (_| (_) | | | | | | |_) | |  __/ |_| | (_) | | | |
#  \___\___/|_| |_| |_| .__/|_|\___|\__|_|\___/|_| |_|
#                     | |
#                     |_|
#
# --------------------------------------------------------------/
GROOVY_HOME='/opt/groovy/current'
FZF_HOME="${iRCHOME}"/utils/fzf                                       # fzf: $ git clone git@github.com:junegunn/fzf.git ${iRCHOME}/utils
ANSIBLE_COMPLETION_PATH="${iRCHOME}/.completion/ansible-completion"   # https://github.com/dysosmus/ansible-completion
RT_COMPLETION="$HOME/.jfrog/jfrog_bash_completion"

test -f "$HOME/.cargo/env"                           && source "$HOME/.cargo/env"
test -s "$HOME/.sdkman/bin/sdkman-init.sh"           && source "$HOME/.sdkman/bin/sdkman-init.sh"
test -f "$HOME"/.rbenv/bin/rbenv                     && eval "$("$HOME"/.rbenv/bin/rbenv init - bash)"
# install git from source
test -f /usr/local/libexec/git-core/git-prompt.sh    && source /usr/local/libexec/git-core/git-prompt.sh
test -f /usr/share/bash-completion/completions/git   && source /usr/share/bash-completion/completions/git

test -d "${GROOVY_HOME}/bin"                         && source <( cat "${GROOVY_HOME}"/bin/*_completion )
test -d "${ANSIBLE_COMPLETION_PATH}"                 && source <( cat "${ANSIBLE_COMPLETION_PATH}"/*.bash )
test -f "${iRCHOME}/.completion/cht.sh"              && source <( cat "${iRCHOME}/.completion/cht.sh" )
test -f "${iRCHOME}/.completion/complete_alias"      && source <( cat "${iRCHOME}/.completion/complete_alias" )
test -f "${RT_COMPLETION}"                           && source "${RT_COMPLETION}"
command -v kubectl > /dev/null                       && source <( kubectl completion bash )
# command -v npm   > /dev/null                       && source <( npm completion )
command -v vault   > /dev/null                       && complete -C /snap/bin/vault vault
command -v pipx    > /dev/null                       && eval "$(register-python-argcomplete pipx)"
command -v pip     >/dev/null                        && eval "$(pip completion --bash)"
type -t _fd        >/dev/null 2>&1                   && complete -F _fd -o nosort -o bashdefault -o default ff ffs
type -t _bat       >/dev/null 2>&1                   && complete -F _fzf_path_completion -o default -o bashdefault showTODO

# fzf
if test -f "$HOME"/.fzf.bash; then
  source "$HOME"/.fzf.bash
else
  command -v fzf >/dev/null                          && eval "$(fzf --bash)"
  test -f "${FZF_HOME}/shell/key-bindings.bash"      && eval "${FZF_HOME}/shell/key-bindings.bash"
fi
type -t _fzf_opts_completion >/dev/null 2>&1         && complete -F _fzf_opts_completion -o bashdefault -o default vim vimdiff penv imgview fman


# /--------------------------------------------------------------
#                   __ _
#                  / _(_)
#   ___ ___  _ __ | |_ _  __ _
#  / __/ _ \| '_ \|  _| |/ _` |
# | (_| (_) | | | | | | | (_| |
#  \___\___/|_| |_|_| |_|\__, |
#                         __/ |
#                        |___/
#
# --------------------------------------------------------------/
# $ set | grep -e SHELLOPTS -e BASHOPTS
shopt -s cdspell
shopt -s cmdhist
shopt -s histappend
# shopt -s extdebug

### disable ctrl+s lock putty : # stty -echo; stty stop undef; stty start undef
# - [here](https://stackoverflow.com/a/25391867/2940319)
#   - tput : No value for $TERM and no -T specified
#   - stty : 'standard input': Inappropriate ioctl for device
if [[ $- == *i*  ]]; then
  stty ixany
  stty ixoff -ixon
  test -f ~/.LESS_TERMCAP && source ~/.LESS_TERMCAP
  # stty start undef
fi

# /--------------------------------------------------------------
#  _                                     _
# | |                                   | |
# | |_ ___ _ __ _ __ ___ ______ ___ ___ | | ___  _ __
# | __/ _ \ '__| '_ ` _ \______/ __/ _ \| |/ _ \| '__|
# | ||  __/ |  | | | | | |    | (_| (_) | | (_) | |
#  \__\___|_|  |_| |_| |_|     \___\___/|_|\___/|_|
#
#
# --------------------------------------------------------------/
export TERM='xterm-color'
# centos/rhel
test -e /usr/share/terminfo/x/xterm-256color  && export TERM='xterm-256color'
# ubuntu
test -e /lib/terminfo/x/xterm-256color        && export TERM='xterm-256color'
# cygwin/osx
test -e /usr/share/terminfo/78/xterm-256color && export TERM='xterm-256color'

test -f "${iRCHOME}"/.env                     && source "${iRCHOME}"/.env
test -f "${iRCHOME}"/.token                   && source "${iRCHOME}"/.token
test -f "${iRCHOME}"/.iwsl                    && source "${iRCHOME}"/.iwsl
test -f "${iRCHOME}"/.tmux-session            && source "${iRCHOME}"/.tmux-session
command -v npm > /dev/null                    && source <( npm completion )

# for open cygwin from totoalcommander/bat/vim
if [[ -z "$STARTIN" ]]; then
  cd "$HOME" || true
elif [[ -d "$STARTIN" ]]; then
  cd "$STARTIN" || true
else
  T=$( dirname "$STARTIN" )
  if [ -d "$T" ]; then
    cd "$T" || true
  else
    echo "$STARTIN is not a valid path."
    cd "$HOME" || true
  fi
fi

LS="/usr/bin/ls"
GREP="/usr/bin/grep"
COPY='/mnt/c/Windows/System32/clip.exe'

# /--------------------------------------------------------------
#                   __
#                  / _|
#  _ __ ___  _   _| |_ _   _ _ __   ___
# | '_ ` _ \| | | |  _| | | | '_ \ / __|
# | | | | | | |_| | | | |_| | | | | (__
# |_| |_| |_|\__, |_|  \__,_|_| |_|\___|
#             __/ |
#            |___/
# --------------------------------------------------------------/
source <( cat "${iRCHOME}"/bin/{ffunc,ifunc,ig,im,icolor}.sh )
test -f "${iRCHOME}"/bin/screenfetch-dev && bash "${iRCHOME}"/bin/screenfetch-dev
test -f "${iRCHOME}"/bin/now             && bash "${iRCHOME}"/bin/now

# vim:tabstop=2:softtabstop=2:shiftwidth=2:expandtab:filetype=sh:foldmethod=marker:foldmarker=#\ --------------------------------------------------------------/,#\ /--------------------------------------------------------------
