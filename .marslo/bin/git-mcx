#!/usr/bin/env bash
# shellcheck source=/dev/null
#=============================================================================
#     FileName : git-mcx
#       Author : marslo.jiao@gmail.com
#      Created : 2025-03-21 01:32:35
#   LastChange : 2025-04-06 09:49:18
#        Usage : git-mcx             # call getCommitMessage to set commit message
#                git-mcx [message]   # using $1 as commit message
#=============================================================================

# git-mcx - [m]rslo [c]ommit pro ma[x]
#
#| ENVIRONMENT        | DESCRIPTION                  | DEFAULT  |
#| -------------------| -----------------------------| ---------|
#| MCX_ENABLE_SCOPE   | is enable commit scope       | true     |
#| MCX_LINT_ENABLE    | is enable commit lint        | true     |
#| MCX_ENABLE_BODY    | is enable commit body        | false    |
#| MCX_ENABLE_FOOTER  | is enable commit footer      | false    |
#| MCX_SHOW_PREVIEW   | is show commit preview       | false    |
#| MCX_SHOW_DIFF      | is show diff after commit    | false    |
#| MCX_GLOBAL_LINTRC  | force using global commitlint| false    |

set -euo pipefail

source "${HOME}"/.marslo/bin/bash-color.sh
source "${HOME}"/.marslo/bin/getCommitMessage.sh

# TODO: add --help/-h for usage

function main() {
  git add --all "$(git rev-parse --show-toplevel)";

  if [[ $# -gt 0 ]]; then
    message="$1"
  else
    message="$(getCommitMessage)" || exit 0
  fi

  # show preview
  if [[ 'true' = "${MCX_SHOW_PREVIEW:-false}" ]]; then
    echo -e "-------------- $(c Mi)git message preview$(c) ----------------"
    printf  "%s\n" "${message}" | command bat --plain --language=COMMIT_EDITMSG --style=plain
    echo -e "------------------------------"
  fi

  if [[ 'true' = "${MCX_SHOW_DIFF:-false}" ]]; then
    echo -e "\nGit Diff (staged):"
    printf "\n%b\n" "$(c Bi)git diff :$(c)"
    git diff --cached --color || printf "%b\n" "$(c Wdi)(no staged changes)$(c)"
  fi

  # commitlint check
  if command -v commitlint >/dev/null 2>&1 && [[ 'true' = "${MCX_LINT_ENABLE:-true}" ]]; then
    [[ 'true' = "${MCX_GLOBAL_LINTRC:-false}" ]] \
      && CONFIG_OPT="--config ${HOME}/.commitlintrc.js" \
      || CONFIG_OPT=''
    printf "%b\n" "$(c Yi)commitlint checking ...$(c)"
    # shellcheck disable=SC2086
    echo "${message}" | commitlint ${CONFIG_OPT} || { printf "%b\n" "$(c Ri)commitlint failed ... $(c)"; }
  fi

  printf "%s\n" "${message}" | git commit -s -a -F -
}

main "$@"

# vim:tabstop=2:softtabstop=2:shiftwidth=2:expandtab:filetype=sh:
