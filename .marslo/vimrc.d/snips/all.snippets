# A valid snippet should starts with:
#
#   snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#   endsnippet
#
# Snippet options:
#
#   b - Beginning of line.
#   i - In-word expansion.
#   w - Word boundary.
#   r - Regular expression
#   e - Custom context snippet
#   A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#   snippet emitter "emitter properties" b
#   private readonly ${1} = new Emitter<$2>()
#   public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#   endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet #!! "shebang" b
#!/usr/bin/env ${1:bash}

${4}

${3://} vim:tabstop=2:softtabstop=2:shiftwidth=2:expandtab:filetype=${2:${1/\w+/\u$0/g}}:
endsnippet

snippet modeline "vim modeline" b
${1:#} vim`!v ':set '. (&expandtab ? printf('expandtab:shiftwidth=%i:tabstop=%i:softtabstop=%i', &sw, &ts, &sts) : printf('noexpandtab:sts=%i:sw=%i:ts=%i', &sts, &sw, &ts)) . (&tw ? ':tw='. &tw : '') . (':filetype=' . (len(&ft) ? &ft : 'sh') ). ':'`
endsnippet

snippet "mode(line)?( (\S+))?" "vim modeline" br
${1:#} vim`!v ':set '. (&expandtab ? printf('expandtab shiftwidth=%i tabstop=%i softtabstop=%i', &sw, &ts, &sts) : printf('noexpandtab:sts=%i:sw=%i:ts=%i', &sts, &sw, &ts)) . (&tw ? ':tw='. &tw : '') . (':filetype=')`${2:`!p
snip.rv = match.group(3) if match.group(2) is not None else "sh"`}:
endsnippet

snippet today
`date "+%Y-%m-%d"`
endsnippet

snippet now
`date "+%Y-%m-%d %H:%M:%S"`
endsnippet

snippet "be(gin)?( (\S+))?" "begin{} / end{}" br
\begin{${1:`!p
snip.rv = match.group(3) if match.group(2) is not None else "something"`}}
  ${2:${VISUAL}}
\end{$1}$0
endsnippet

# `!p ..`: using python
snippet wow
${1:Text}`!p snip.rv = (75-2*len(t[1]))*' '+t[1].upper()`
endsnippet

# dorp down menu
snippet query
Your age: ${1|<18,18~60,>60|}
Your height: ${2|<120cm,120cm~180cm,>180cm|}
endsnippet

# automatic expand when `p` is in the beginning of the line
snippet "^p" "package" rbA
package ${1:main}
endsnippet

# vim:tabstop=2:softtabstop=2:shiftwidth=2:expandtab:filetype=snippet:
