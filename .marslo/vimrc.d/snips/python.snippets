# A valid snippet should starts with:
#
#   snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#   endsnippet
#
# Snippet options:
#
#   b - Beginning of line.
#   i - In-word expansion.
#   w - Word boundary.
#   r - Regular expression
#   e - Custom context snippet
#   A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#   snippet emitter "emitter properties" b
#   private readonly ${1} = new Emitter<$2>()
#   public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#   endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet #!! "shebnag" b
#!/usr/bin/env ${1:python3}
# -*- coding: utf-8 -*-

${2}

# vim:tabstop=4:softtabstop=4:shiftwidth=4:expandtab:filetype=${1/(.*)[0-9]+/$1/}:
endsnippet

snippet shebang "shebnag" b
#!/usr/bin/env ${1:python3}
# -*- coding: utf-8 -*-

import sys
${3}

${4:#} vim:tabstop=4:softtabstop=4:shiftwidth=4:expandtab:filetype=${1/(.*)[0-9]+/$1/}:
endsnippet

snippet modeline "vim modeline" b
# vim:tabstop=4:softtabstop=4:shiftwidth=4:expandtab:filetype=python:
endsnippet

snippet //vim "vim modeline" b
# vim:tabstop=4:softtabstop=4:shiftwidth=4:expandtab:filetype=python:
endsnippet

# vim:tabstop=2:softtabstop=2:shiftwidth=2:expandtab:filetype=snippet:
